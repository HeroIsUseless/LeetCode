int findIntegers(int num){
    if (num < 2) return num + 1;
    int f[30]; // 记录f[i]为000...11111(i个1）中不包含连续的1的个数
    f[0] = 1;
    f[1] = 2; // 初始化，并没有什么道理，在上面就已经返回了
    for (int i = 2; i < 30; i++)
        f[i] = f[i - 1] + f[i - 2]; // 就这样从1加到了30？
    int ans = 0; // 是一个结果
    for (int i = 29; i >= 0; i--) // 从29到0倒着来
    {
        if ((num >> i) & 1) // 第一个移位，得到它少一位的哪那些部分
        {
            ans += f[i]; // 直接加上这个部分
            if (num >> (i + 1) & 1) // 如果出现两个都为1，那么下一位肯定为0，那么就包括了
                return ans; // 直接返回
        }
    }
    return ans + 1; // 返回这样的数字的数量，而且加上了1
}